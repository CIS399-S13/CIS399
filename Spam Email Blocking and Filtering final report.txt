Spam Email Blocking and Filtering final report
Unwanted junk mail – spam – is an ever present problem for any organization that uses email. By implementing spam filtering and blocking features, most users of the server will receive less useless messages, and the email service can clutter their mailbox and makes their work more efficient.


Goals for the project and test methods
	In this project, we will update our email service by adding spam filtering and blocking features. To active the blocking feature, we use some free DNS blacklists that provided on the internet. For spam filtering, we will use SpamAssassin as assisstent. 
	We cannot really receive bunches of spams from many different sources since our server address is not publicized. To test how good those functions work, we will test the blocking feature by adding some DNS that we have email accounts on into the blacklist, then send email from those DNS to the server. See if the emails are block. To test the filtering feature, we will use different approaches which will be described below.

Testing our goal:
	Blocking:
		Since we are not easy to receive email from those DNS in the blacklist, we test this feature by adding the server that we have email account on. We add those DNS into /etc/mail/access_db file, and set those DNSs to be rejected. Then we try sending emails from those email servers. During our testing, we cannot receive any email from the servers that have been blocked, and we will receive an email noticing us that the email cannot be delivered because of the rejection from the server.
		Thus, the blocking feature works good.  

	Filtering: 
		In this test, we have use different approaches.
		1. Magical string test.
			We implement this test by using GTUBE.
			According to the wiki page of SpamAssassin, GTUBE is used to test if SpamAssassin is working. We just need to simply sent an email including a "magical" srting which is "XJS*C4JDBQADN1.NSBN3*2IDNEN*GTUBE-STANDARD-ANTI-UBE-TEST-EMAIL*C.34X" in the body. This test was passed. All email with this string has been considered as spam, and has been placed into the spam folder.
			
		2. Forward the spam from our other email account.
			We try copying or forwarding some spams from the uoregon.edu email account and gmail account to our asian.ilab.cs.uoreogn.edu server. We assumed it will work, and all the spams will be move to the spam file.
			However, base on our test result, non of the spam was detected and be filtered. All spams forwarded from other account still be delivered to the normail mail box.
			At the beginning, we were confuse about this, and we thought that's because the spamAssassin is not working correctly. However, that's not true. We try to find out reason about this from the wiki page. In the wiki page, it states that "if you're not a spammer and the message was solicited and it wasn't bulk then it ain't spam. So don't send yourself "spam" and expect SpamAssassin to agree!" (SpamAssassin Wiki). So no matter how we configure the SpamAssassin, it won't filter any spam that forwarded by ourselves.
			Therefore, we failed this test, and it was not efficient test.
		3. Use online spam generator to send some spam email to our server. 
			After searching from google, we have found a website that provides sending some spams for test which is http://www.maysoft.com/selfservespam.nsf/dl. This website can create and send at most five spams per request. We try using it to send many spam to our server, and most spams have been caught and moved into spam folder. Only a few of the spams pass the spam filtering and be delivered to the regular mailbox.

		Base on these three test, we believe the spam filtering feature is working.

Effect on its user population:
	
	Since the filtering method is not perfectly filter emails. Some emails may be blocked even if it shouldn't be blocked, or we supposed to deliver as trusted email, but it can go ti spam folder. 
	Therefore, some emails could mark as spam emails even if it is important email for the user. Users may complain about this problem. To minimize this problem, we make spam filtering as much accurate as we can. 
	Even though email blocking and filtering is not perfectly work, this function reduce the amount of annoying junk emails, and potential hazard of user been hacking or phishing to release their confidential information. 
	/** need to be added**/


Security issue
	This project can give a cleaner environment to user so that they won't see too many useless emails. 
	Also, normal email messages are not entirely secure. Someone could gain unauthorized access to the mailboxes of sender or recipient. Except for very rare instances of hacking.To achieve this goal, the service will ensure that all emails have the correct address for the intended recipient.

	In fact, there is not security issue for adding the spam email blocking and filtering function to the server. 

Works need to be completed
	Blocking:
	/** need to be added **/

	Filtering:
		Since we already have the sendmail service install in our serve, what we need to do is to install the SpamAssassian. 
		After the spamAssassian is succes to install, integrating spamAssassin with sendmail. 
		Firstly, configuring procmail to receives the email form sendmail and matches the email against a set of rules specified in /etc/procmailrc. 
		Secondly, configuring spamAssassin. Since spamAssassin works by analysing each email and comparing the various headers and message bodies to a sample set of strings. Or, spamAssassin use Bayesian analysis to learn, analyze and keep the rules datebases up to date. The local.cf has some default rules, and it can also place configuration directives and rules.


Further maintenance
	Since spam blocking DNS are updating frequently, and it's possible that the DNS blacklist provider we are using will be shutted down in the future, we have to keep track of the provider to make sure the DNS blacklist is still working. Also, the blacklist needs to be update frequently.(May need to be check once a week.)
	
	For the spam filtering feature, we need to update the rules for filtering. We will set a cron job to do this once a week to make sure SpamAssassin can perform best. 

Documentation
For admin:
/** need to be done **/

For user:
	Users can configure their own per-user promail behavior. If you'd like to reject(bounce) spam with an unfriendly error message, you can do the following works.   
	/** need to be done **/
	1. Create a new configuration file "~/.procmailrc"
	2. Inside the file, type-in the following command: (Number at the beginning of each line is the line number, you don't need to type it in your file)
		1:  MAILDIR=$HOME/mail
		2:  
		3:  :0 H
		4:  * ^X-Spam-Status:.*Yes
		5:  {
		6:  EXITCODE=67
		7:  :0:
		8:  spam
		9:  }

	The error message will let some spammers to remove the recipient's email address from their spam list. As a result, they may never spam you again. Furthermore, they may remove the recipient's email address before they sell their list to someone else. This will result in less spam in the long run, freeing up your system's resources.
	